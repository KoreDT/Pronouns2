plugins {
    id 'java'
    id "io.github.goooler.shadow" version "8.1.8"
}

repositories {
    mavenCentral()
}

configurations {
    shadowCommon
}

dependencies {
    compileOnly "net.minestom:minestom-snapshots:${rootProject.minestom_version}"

    implementation(shadowCommon(project(path: ":common")))
    implementation(shadowCommon(project(path: ":API")))
}

tasks.build.dependsOn tasks.shadowJar

shadowJar {
    configurations = [project.configurations.shadowCommon]
    setArchiveClassifier("")
    destinationDirectory = file("$rootProject.rootDir/output")
}

def templateSource = file('src/main/java')
def templateDest = layout.buildDirectory.dir('generatedJavaSrc')
def generateTemplates = tasks.register('generateTemplates', Copy) { task ->
    def props = [
            'version': project.version
    ]
    task.inputs.properties props

    task.from templateSource
    task.into templateDest
    task.expand props
}

sourceSets.main.java.srcDirs = ["src/main/java"]

compileJava.dependsOn(generateTemplates)
compileJava.mustRunAfter(generateTemplates)
compileJava.doFirst {
    sourceSets.main.java.srcDirs = ["build/generatedJavaSrc"]
}
compileJava.doLast {
    sourceSets.main.java.srcDirs = ["src/main/java"]
}